name: "android"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build-and-test-android:
    name: Build and Test (Android)
    runs-on: ubuntu-latest
    env:
      BAZEL: bazelisk-linux-amd64
      NDK_API_LEVEL: 21
      NDK_VERSION: 21.3.6528147

    steps:
    - uses: actions/checkout@v2

    - name: Free up some space in an image
      run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          df -h

    - name: Mount bazel cache
      uses: actions/cache@v2
      with:
        # See https://docs.bazel.build/versions/master/output_directories.html
        path: "~/.cache/bazel"
        key: ${{ runner.os }}-build

    - name: Install bazelisk
      run: |
        curl -LO "https://github.com/bazelbuild/bazelisk/releases/latest/download/${BAZEL}"
        chmod +x ${BAZEL}

    - name: Prepare Android NDK directory for caching
      # Workaround for https://github.com/actions/virtual-environments/issues/1337.
      # See also: https://stackoverflow.com/questions/60776512/how-can-i-cache-android-ndk-in-my-github-actions-workflow.
      # ANDROID_HOME points to /usr/local/lib/android/sdk.
      run: |
        echo "===> Android HOME directory: ${ANDROID_HOME}"
        sudo mkdir -p ${ANDROID_HOME}/ndk
        sudo chmod -R 777 ${ANDROID_HOME}/ndk
        sudo chown -R $USER:$USER ${ANDROID_HOME}/ndk

    - name: Android NDK Cache
      id: ndk-cache
      uses: actions/cache@v2
      with:
        path: ${ANDROID_HOME}/ndk
        key: ndk-cache-${{ env.NDK_VERSION }}-v2

    - name: Install Android NDK
      if: steps.ndk-cache.outputs.cache-hit != 'true'
      run: |
        echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;${NDK_VERSION}"
        echo "===> Android NDK installed in: "$(ls -l ${ANDROID_HOME}/ndk)

    - name: Build
      run: ./${BAZEL} build -c opt --config=android_x86_64 --action_env=ANDROID_NDK_HOME=${ANDROID_HOME}/ndk/${NDK_VERSION} --action_env=ANDROID_NDK_API_LEVEL=${NDK_API_LEVEL} //...

    - name: Test
      run: ./${BAZEL} test -c opt --test_output=errors --config=android_x86_64 --action_env=ANDROID_NDK_HOME=${ANDROID_HOME}/ndk/${NDK_VERSION} --action_env=ANDROID_NDK_API_LEVEL=${NDK_API_LEVEL} //...
